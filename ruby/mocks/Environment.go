// Code generated by mockery 2.9.4. DO NOT EDIT.

package mocks

import (
	ruby "github.com/bitrise-io/go-steputils/ruby"
	mock "github.com/stretchr/testify/mock"
)

// Environment is an autogenerated mock type for the Environment type
type Environment struct {
	mock.Mock
}

// IsGemInstalled provides a mock function with given fields: gem, version
func (_m *Environment) IsGemInstalled(gem string, version string) (bool, error) {
	ret := _m.Called(gem, version)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string, string) bool); ok {
		r0 = rf(gem, version)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(gem, version)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// IsSpecifiedRbenvRubyInstalled provides a mock function with given fields: workdir
func (_m *Environment) IsSpecifiedRbenvRubyInstalled(workdir string) (bool, string, error) {
	ret := _m.Called(workdir)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(workdir)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 string
	if rf, ok := ret.Get(1).(func(string) string); ok {
		r1 = rf(workdir)
	} else {
		r1 = ret.Get(1).(string)
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(string) error); ok {
		r2 = rf(workdir)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// RubyInstallType provides a mock function with given fields:
func (_m *Environment) RubyInstallType() ruby.InstallType {
	ret := _m.Called()

	var r0 ruby.InstallType
	if rf, ok := ret.Get(0).(func() ruby.InstallType); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(ruby.InstallType)
	}

	return r0
}
